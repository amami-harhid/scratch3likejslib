/**
 * Sample20
 * „É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°Âèó‰ø°„Åó„ÄÅ„Éï„Ç≠„ÉÄ„Ç∑(SAY,THINK)„ÇíÂà∂Âæ°„Åô„Çã
 * „É°„ÉÉ„Çª„Éº„Ç∏„ÅØEventEmitter„Çí‰Ωø„ÅÑÂÆüË£Ö„Åó„Å¶„ÅÑ„Çã„ÄÇ
 * EventEmitter„ÅØÂêå‰∏ÄID„ÅÆÂèó‰ø°(on)„ÅÆÂÆöÁæ©„ÅØ10ÂÄã„Åæ„Åß„ÅÆÂà∂Èôê„Åå„ÅÇ„Çã„Åå„ÄÅ
 * „ÄéwhenBroadcastReceived„Äè„Çí‰Ωø„ÅÜ„Åì„Å®„Åß„ÄÅÂêå‰∏ÄID„ÅÆÂèó‰ø°ÁôªÈå≤Êï∞„Å´„Å§„ÅÑ„Å¶
 * ÂÆüË£Ö‰∏ä„ÅÆ‰∏äÈôê„ÅØ„Å™„ÅÑÔºà„Åü„Å†„ÅóÂèó‰ø°ÁôªÈå≤Êï∞„ÅåÊ•µÁ´Ø„Å´Â§ö„ÅÑ„Å®„Åç„ÅØÂãï„Åç„ÅåÈÅÖ„Åè„Å™„Çã„Åã„ÇÇÔºâ
 */
import {PlayGround, Libs, Storage, Images, Sounds} from '../../build/likeScratchLib.js'

const [Pg, St] = [PlayGround, Storage]; // Áü≠Á∏ÆÂêç„Å´„Åô„Çã

Pg.title = "„ÄêSample20„Äë‰∫åÂåπ„ÅÆ„Éç„Ç≥„ÄÅ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°Âèó‰ø°„Åó„Å¶‰ºöË©±„Çí„Åï„Åõ„Çã"

import {
    bubbleTextArr, 
    bubbleTextArr2, 
    MessageCat1Say, 
    MessageCat2Say,
    MessageCat2Think,
    MessageByeBye,
    MessageTAIJYO} from './bubble.js';

Pg.preload = async function preload() {
    this.loadImage('../assets/backdrop.png','BackDrop');
    this.loadImage('../assets/cat.svg','Cat1');
    this.loadImage('../assets/cat2.svg','Cat2');
}
Pg.prepare = async function prepare() {
    St.stage = new Libs.Stage("stage");
    St.stage.addImage( Images.BackDrop );

    St.cat = new Libs.Sprite("Cat");
    St.cat.setRotationStyle( Libs.RotationStyle.LEFT_RIGHT );
    St.cat.addImage( Images.Cat1 );
    St.cat.addImage( Images.Cat2 );
    St.cat.position = {x: -150, y: 0}
    St.cat.direction = 90;
    St.cat2 = new Libs.Sprite("Cat2");
    St.cat2.setRotationStyle( Libs.RotationStyle.LEFT_RIGHT );
    St.cat2.addImage( Images.Cat1 );
    St.cat2.addImage( Images.Cat2 );
    St.cat2.direction = -90;
    St.cat2.position = {x: 150, y: 0}
}

Pg.setting = async function setting() {

    const BubbleScale = {scale:{x:100,y:100}};
    St.stage.whenFlag( async function() {
        // 1ÁßíÂæÖ„Å§
        await Libs.wait(1000);
        
        // (‚Üì)È†ÜÁï™„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ„Å£„Å¶ÂæÖ„Å§

        //(Â∑¶) "„Åì„Çì„Å´„Å°„ÅØ„ÄÇËâØ„ÅÑÂ§©Ê∞ó„Åß„Åô„Å≠"
        await this.broadcastAndWait(MessageCat1Say, bubbleTextArr[0], 3); // 3 
        //(Âè≥) "üíö„Åì„Çì„Å´„Å°„ÅØüíöÈùíÁ©∫„Åå„Çà„ÅÑÊÑü„Åò„Åß„Åô„Å≠"
        await this.broadcastAndWait(MessageCat2Say, bubbleTextArr2[0], 1); // 1
        //(Âè≥) "„Å©„Åì„Å´„Åä„Åß„Åã„Åë„Åß„Åô„Åã"
        await this.broadcastAndWait(MessageCat2Say, bubbleTextArr2[1], 2); // 2
        //(Â∑¶) "„Å°„Çá„Å£„Å®Ëøë„Åè„ÅÆ„Çπ„Éº„Éë„Éº„Å´Ë≤∑„ÅÑÁâ©„Å´„ÅÑ„Åè„Çì„Åß„Åô„Çà"
        await this.broadcastAndWait(MessageCat1Say, bubbleTextArr[1], 1); // 1
        //(Âè≥) "„ÅÇ„Çâ„ÅÇ„Çâ„Åù„Çå„ÅØ„ÅÑ„ÅÑ„Åß„Åô„Å≠"
        await this.broadcastAndWait(MessageCat2Think, bubbleTextArr2[2], 4); // 4
        // „Åä‰∫í„ÅÑ„Å´ÈÄÄÂ†¥
        await this.broadcastAndWait(MessageByeBye, "„Åù„Çå„Åß„ÅØ„ÄÅ„Åæ„ÅüÔºÅ", 2); // 4
        this.broadcast(MessageTAIJYO);

    });
    St.cat.whenBroadcastReceived(MessageCat1Say, async function() {
        const me = this;
        // ‰∏ä‰∏ã„Å´Êè∫„Çâ„Åô„ÄÇ
        await me.repeat(10, _=>{
            me.setXY(me.position.x, me.position.y+2);
        });
        await me.repeat(10, _=>{
            me.setXY(me.position.x, me.position.y-2);
        });
    });
    St.cat.whenBroadcastReceived(MessageCat1Say, async function(text,time) {
        // Cat „ÅÆ „Éï„Ç≠„ÉÄ„Ç∑ „ÇíÂá∫„Åô
        //console.log('CAT „Éï„Ç≠„ÉÄ„Ç∑ time='+time + " text="+text);
        if(time>0) {
            await this.sayForSecs(text, time, BubbleScale);
        }else{
            this.say(text);
        }
    });
    St.cat.whenBroadcastReceived(MessageTAIJYO, async function() {
        // Cat ÈÄÄÂ†¥
        //console.log('Cat ÈÄÄÂ†¥');
        this.say('');
        this.direction *= -1;
        await this.while(true, _=>{
            this.moveSteps(5);
            if(this.isTouchingEdge()) {
                Libs.Loop.break();
            }
        });
        this.visible = false; 
    });
    St.cat2.whenBroadcastReceived(MessageTAIJYO, async function() {
        // Cat2 ÈÄÄÂ†¥
        //console.log('Cat2 ÈÄÄÂ†¥');
        this.say('');
        this.direction *= -1;
        await this.while(true, _=>{
            this.moveSteps(5);
            if(this.isTouchingEdge()) {
                Libs.Loop.break();
            }
        });
        this.visible = false;         
    });
    St.cat2.whenBroadcastReceived(MessageCat2Say, async function() {
        const me = this;
        // ‰∏ä‰∏ã„Å´Êè∫„Çâ„Åô„ÄÇ
        await me.repeat(10, _=>{
            me.setXY(me.position.x, me.position.y+2);
        });
        await me.repeat(10, _=>{
            me.setXY(me.position.x, me.position.y-2);
        });    
    });
    St.cat2.whenBroadcastReceived(MessageCat2Say, async function(text="", time=-1) {
        // Cat2 „ÅÆ „Éï„Ç≠„ÉÄ„Ç∑ „ÇíÂá∫„Åô
        //console.log('CAT2 „Éï„Ç≠„ÉÄ„Ç∑ time='+time + " text="+text);
        if(time>0) {
            await this.sayForSecs(text, time, BubbleScale);
        }else{
            this.say(text);
        }    
    });
    St.cat2.whenBroadcastReceived(MessageCat2Think, async function(text="", time=-1) {
        // Cat2 „ÅÆ „Éï„Ç≠„ÉÄ„Ç∑ „ÇíÂá∫„Åô
        //console.log('CAT2 „Éï„Ç≠„ÉÄ„Ç∑ time='+time + " text="+text);
        if(time>0) {
            await this.thinkForSecs(text, time);
        }else{
            this.think(text);
        }    
    });
    St.cat.whenBroadcastReceived(MessageByeBye, async function(text="", time=-1) {
        // „Åù„Çå„Åß„ÅØ„ÄÅ„Å®„ÅÑ„ÅÜ
        //console.log('CAT „Éï„Ç≠„ÉÄ„Ç∑ time='+time + " text="+text);
        await this.thinkForSecs(text, time);
    });
    St.cat2.whenBroadcastReceived(MessageByeBye, async function(text="", time=-1) {
        // „Åù„Çå„Åß„ÅØ„ÄÅ„Å®„ÅÑ„ÅÜ
        //console.log('CAT2 „Éï„Ç≠„ÉÄ„Ç∑ time='+time + " text="+text);
        await this.sayForSecs(text, time);
    });

}